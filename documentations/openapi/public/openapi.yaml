openapi: '3.0.2'

info:
  title: Template API Documentation
  description: Manage API endpoints.
  version: 0.0.1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []

servers:
  - url: https://www.kuliah-oskhar.my.id/api/v1
  - url: http://localhost:8000/api/v1

paths:
  # Write your own API endpoints
  /auth/login:
    # endpoint GET /buku
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'admin@example.com'
                password:
                  type: string
                  example: 'admin'
                is_remember_me:
                  type: boolean
                  example: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0ZXN0IiwiaWF0IjoxNjI0MDM0MjU5LCJleHAiOjE2MjQwMzQ5NTl9'
  /auth/reset-password:
    # endpoint GET /buku
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  example: '123456'
                new_password:
                  type: string
                  example: '123456'
                confirm_password:
                  type: string
                  example: '123456'
      responses:
        200:
          content:
  /auth/refresh-token:
    # endpoint GET /buku
    post:
      tags:
        - Authentication
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0ZXN0IiwiaWF0IjoxNjI0MDM0MjU5LCJleHAiOjE2MjQwMzQ5NTl9'

  /auth/logout:
    # endpoint GET /buku
    post:
      tags:
        - Authentication
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Logout Success'
  /auth/user:
    # endpoint GET /buku
    get:
      tags:
        - Authentication
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Name
                  email:
                    type: string
                    example: email@example.com
                  is_admin:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: 2023-01-01 00:00:00
                  updated_at:
                    type: string
                    example: 2023-01-01 00:00:00
                  deleted_at:
                    type: string
                    example: 2023-01-01 00:00:00

  /incident:
    get:
      summary: Get all incidents
      parameters:
        - in: query
          name: length
          schema:
            type: integer
          description: Jumlah data yang ingin ditampilkan
      responses:
        '200':
          description: List of incidents
          content:
          application/json:
            schema:
              type: object
              properties:
                current_page:
                  type: integer
                  example: 1
                total_pages:
                  type: integer
                  example: 1
                total_data:
                  type: integer
                  example: 1
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      subject:
                        type: string
                        example: Subject
                      status:
                        type: string
                        example: Submitted
                      comment:
                        type: string
                        example: Comment
                      created_at:
                        type: string
                        example: 2023-01-01 00:00:00
                      reporter:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Name
                      resolver:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Name
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Name
    post:
      summary: Create a new incident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - description
                - status
              properties:
                subject:
                  type: string
                description:
                  type: string
                status:
                  type: string
      responses:
        '201':
          description: Incident created

  /incident/category:
    get:
      summary: Get incident categories
      responses:
        '200':
          description: List of categories
          content:
          application/json:
            schema:
              type: object
              properties:
              id:
               type: int
               example: 1
              name:
               type: string
               example: Error machine

  /incident/{id}:
    get:
      summary: Get incident by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Single incident
          content:
          application/json:
            schema:
              type: object
              properties:
                current_page:
                  type: integer
                  example: 1
                total_pages:
                  type: integer
                  example: 1
                total_data:
                  type: integer
                  example: 1
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      subject:
                        type: string
                        example: Subject
                      status:
                        type: string
                        example: Submitted
                      comment:
                        type: string
                        example: Comment
                      created_at:
                        type: string
                        example: 2023-01-01 00:00:00
                      reporter:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Name
                      resolver:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Name
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Name
    delete:
      summary: Delete incident by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Deleted

  /incident/status/{id}:
    put:
      summary: Update incident status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Status updated

  /incident/worker/{id}:
    put:
      summary: Update incident worker comment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - comment
              properties:
                comment:
                  type: string
      responses:
        '200':
          description: Worker comment updated


